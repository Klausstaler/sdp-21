import a_star_search
from typing import NamedTuple
node_positions = [
    [[0,0],[3,0],[6,0],[9,0]],#0-3
    [[0,1],[0.5,1],[2.5,1],[3,1],[3.5,1],[5.5,1],[6,1],[6.5,6],[8.5,1],[9,1]],#4-13
    [[0,2],[0.5,2],[2.5,2],[3,2],[3.5,2],[5.5,2],[6,2],[6.5,6],[8.5,2],[9,2]],#14-23
    [[0,3],[0.5,3],[2.5,3],[3,3],[3.5,3],[5.5,3],[6,3],[6.5,6],[8.5,3],[9,3]],#24-33
    [[0,4],[0.5,4],[2.5,4],[3,4],[3.5,4],[5.5,4],[6,4],[6.5,6],[8.5,4],[9,4]],#34-43
    [[0,5],[0.5,5],[2.5,5],[3,5],[3.5,5],[5.5,5],[6,5],[6.5,6],[8.5,5],[9,5]],#44-53
    [[0,6],[3,6],[6,6],[9,6]]#54-57
    ]

node_connections = [
    [1],                    [2,13],                 [3],                           [13],
    [0,5],      [4], [7],   [6,8,17],   [7], [10],  [9,11,2],   [10],   [13],   [12,23],
    [4,15],     [14],[17],  [16,18,27], [17],[20],  [19,21,10], [20],   [23],   [22,33],
    [14,25],    [24],[27],  [26,28,37], [27],[30],  [29,31,20], [30],   [33],   [32,43],
    [24,35],    [34],[37],  [36,38,47], [37],[40],  [39,41,30], [40],   [43],   [42,53],
    [34,45],    [44],[47],  [46,48,55], [47],[50],  [49,51,40], [50],   [53],   [52,57],
    [44],                   [54],                   [55,50],                    [56],
    ]


node_distances = [
    [3],[3,1],[3,1],[1],
    [1,1],[1],[1],[1,1,1],[1],[1],[1,1,1],[1],[1],[1,1],
    [1,1],[1],[1],[1,1,1],[1],[1],[1,1,1],[1],[1],[1,1],
    [1,1],[1],[1],[1,1,1],[1],[1],[1,1,1],[1],[1],[1,1],
    [1,1],[1],[1],[1,1,1],[1],[1],[1,1,1],[1],[1],[1,1],
    [1,1],[1],[1],[1,1,1],[1],[1],[1,1,1],[1],[1],[1,1],
    [1],[3,1],[3,1],[3],
    ]
class Connection(NamedTuple):
    node_idx: int
    distance: float
adjacency_list = []
for node_idx, adjacent_nodes in enumerate(node_connections):
    node_list = []
    for adj_idx, adjacent_node in enumerate(adjacent_nodes):
        connection = Connection(adjacent_node, node_distances[node_idx][adj_idx])
        node_list.append(connection)
    adjacency_list.append(node_list)

#print(a_star_search.a_star_search(node_positions, node_connections, node_distances, 1, 41))
